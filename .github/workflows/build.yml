name: build
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  CARGO_TERM_COLOR: always

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [ macos-latest, windows-latest ]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Cargo Cache
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo

      - name: Cargo Target Cache
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo-target

      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install frontend dependencies
        run: cd ui && npm install
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
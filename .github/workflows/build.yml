name: build
on:
  pull_request:
  workflow_dispatch:
  workflow_call:
    inputs:
      buildOnly:
        required: false
        type: boolean
        default: true
      prerelease:
        required: false
        type: boolean
        default: true
      releaseName:
        required: false
        type: string
        default: untitled release - ${{ github.ref_name }}

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build-app:
    runs-on: windows-latest
    outputs:
      artifactPaths: ${{ steps.tauri-build.outputs.artifactPaths }}
    steps:
      - name: cargo cache
        uses: actions/cache@v1
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo

      - name: cargo target/ cache
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo-target

      - name: ui/node_modules/ cache
        uses: actions/cache@v1
        with:
          path: ui/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/ui/package.json') }}-${{ hashFiles('**/ui/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ hashFiles('**/ui/package.json') }}
            ${{ runner.os }}-node-modules

      - uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: install rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install frontend dependencies
        run: cd ui && npm install

      - uses: tauri-apps/tauri-action@v0
        name: building app
        if: ${{ inputs.buildOnly == true }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: create release notes
        id: build_changelog
        if: ${{ inputs.buildOnly != true }}
        uses: mikepenz/release-changelog-builder-action@{latest-release}

      - uses: tauri-apps/tauri-action@v0
        name: building app and creating release
        if: ${{ inputs.buildOnly != true }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          releaseName: ${{ inputs.releaseName }}
          releaseBody: ${{ steps.build_changelog.outputs.changelog }}
          prerelease: ${{ inputs.prerelease }}
          releaseDraft: true